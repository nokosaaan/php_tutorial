<?php
/*
ディレクティブの処理は、ファイルをコンパイルする
際に行われるので、 ディレクティブの値として渡せる
のは、リテラルだけとなります。 変数や定数は、
使えません。以下に例を示します。
*/
// これは有効です
declare(ticks=1);

// これは無効です
const TICK_VALUE = 1;
//declare(ticks=TICK_VALUE);
?>

<?php
/*
declare ブロックの 文 の実行のされ方や実行時に
どのような作用が起こるかについては ディレクティブ
 に何が指定されたかに依存します。

declare 文はグローバルスコープとしても使用され、
それはそれ以降のコード上の全てにおいて影響します 
(しかし、declare を含むファイルがインクルード
された場合は、 親ファイルにはその影響は及びません)。
*/
// 以下は同じ意味です

// こうすることもできますし、
declare(ticks=1) {
    // ここにすべてのスクリプトを書きます
}

// こうすることもできます
declare(ticks=1);
// ここにすべてのスクリプトを書きます
?>

<?php
/*
tickとはdeclareブロックの実行中にパーサが N個の
低レベル tick 可能な文を実行するごとに 発生する
イベントのことです。Nの値は declareブロックの
ディレクティブの箇所で ticks=Nのように 指定します。

すべての文が tick 可能なわけではありません。
たとえば条件式や引数式などは tick できません。

tickごとに発生させるイベントは
register_tick_function() を使用して指定します。
詳細は以下の例を参照ください。1回のtickで 
複数のイベントが起こり得ることに注意してください。
*/
declare(ticks=1);

// tick イベントごとにコールされる関数
function tick_handler()
{
    echo "tick_handler() called\n";
}

register_tick_function('tick_handler'); // tick イベント発生

$a = 1; // tick イベント発生

if ($a > 0) {
    $a += 2;   // tick イベント発生
    print $a; // tick イベント発生
}

?>
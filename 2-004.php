<?php
/*
変数名を可変にできると便利なことが時々あります。
可変変数では、変数名を動的にセットし使用できます。
通常の変数は、次のような命令でセッ トします。
*/
$a = 'hello';
/*
可変変数は、変数の値をとり、変数の名前として
扱います。上の例では、 hello は、ドル記号を
二つ使用することにより、 変数の名前として使用
することができます。つまり、
*/
$$a = 'world';
/*
ここまでで、二つの変数が定義され、
PHP シンボルツリーに定義されてい ます。
これらは、"hello" を値とする$aと "world" を
値とする$helloです。そこで、次の命令
*/
echo "$a {$$a} \n";
//の出力は、次の命令と全く同じとなります。
echo "$a $hello \n";
//すなわち、両方共、hello worldを出力します。

/*
可変変数を配列で使用する際には、曖昧さの問題を
解決する必要がありま す。つまり、$$a[1]と書いた
場合、 $a[1]を変数として使用したいのか、 $$aを
変数とし [1] を変数の添え字としたいのかを、 
パーサが知る必要があるのです。この曖昧さを解決する
には、前者では ${$a[1]}とし、後者では ${$a}[1]と
する構文を用います。
つまり,{}で囲った部分が変数として明示的になる
*/
?>

<?php
class foo {
    var $bar = 'I am bar.';
    var $arr = array('I am A.', 'I am B.', 'I am C.');
    var $r   = 'I am r.';
}

$foo = new foo();
$bar = 'bar';
$baz = array('foo', 'bar', 'baz', 'quux');
echo $foo->$bar . "\n"; //fooクラスのメンバbarを表示
echo $foo->{$baz[1]} . "\n"; //$baz[1]:barなので上の行と同じ

$start = 'b';
$end   = 'ar';
echo $foo->{$start . $end} . "\n";

$arr = 'arr';
echo $foo->{$arr[1]} . "\n";//$arr[1]:rなのでfooクラスのメンバrを表示

?>